[doctest] run with "--help" for options

root
1
1.1

root
2
2.1

root
2
===============================================================================
subcases.cpp(0):
TEST CASE:  lots of nested subcases

subcases.cpp(0): FATAL ERROR: 

===============================================================================
subcases.cpp(0):
TEST CASE:  subcases can be used in a separate function as well
  from function...

subcases.cpp(0): MESSAGE: print me twice

===============================================================================
subcases.cpp(0):
TEST CASE:  subcases can be used in a separate function as well
  from function...
  sc1

subcases.cpp(0): MESSAGE: hello! from sc1

===============================================================================
subcases.cpp(0):
TEST CASE:  subcases can be used in a separate function as well

subcases.cpp(0): MESSAGE: lala

===============================================================================
subcases.cpp(0):
TEST CASE:  subcases can be used in a separate function as well
  from function...

subcases.cpp(0): MESSAGE: print me twice

===============================================================================
subcases.cpp(0):
TEST CASE:  subcases can be used in a separate function as well
  from function...
  sc2

subcases.cpp(0): MESSAGE: hello! from sc2

===============================================================================
subcases.cpp(0):
TEST CASE:  subcases can be used in a separate function as well

subcases.cpp(0): MESSAGE: lala

===============================================================================
subcases.cpp(0):
  Scenario: vectors can be sized and resized
     Given: A vector with some items
      When: the size is increased
      Then: the size and capacity change

subcases.cpp(0): ERROR: CHECK( v.size() == 20 ) is NOT correct!
  values: CHECK( 10 == 20 )

===============================================================================
subcases.cpp(0):
  Scenario: vectors can be sized and resized
     Given: A vector with some items
      When: less capacity is reserved
      Then: neither size nor capacity are changed

subcases.cpp(0): ERROR: CHECK( v.size() == 10 ) is NOT correct!
  values: CHECK( 5 == 10 )

===============================================================================
subcases.cpp(0):
TEST CASE:  test case should fail even though the last subcase passes
  one

subcases.cpp(0): ERROR: CHECK( false ) is NOT correct!
  values: CHECK( false )

===============================================================================
subcases.cpp(0):
TEST CASE:  fails from an exception but gets re-entered to traverse all subcases
  level zero
  one

subcases.cpp(0): ERROR: CHECK( false ) is NOT correct!
  values: CHECK( false )

===============================================================================
subcases.cpp(0):
TEST CASE:  fails from an exception but gets re-entered to traverse all subcases

subcases.cpp(0): ERROR: test case THREW exception: failure... but the show must go on!

===============================================================================
subcases.cpp(0):
TEST CASE:  fails from an exception but gets re-entered to traverse all subcases
  level zero
  two

subcases.cpp(0): ERROR: CHECK( false ) is NOT correct!
  values: CHECK( false )

===============================================================================
subcases.cpp(0):
TEST CASE:  fails from an exception but gets re-entered to traverse all subcases

subcases.cpp(0): ERROR: test case THREW exception: failure... but the show must go on!

===============================================================================
[doctest] test cases:      5 |      1 passed |      4 failed | 
[doctest] assertions:     21 |     15 passed |      6 failed |
[doctest] Status: FAILURE!
Program code.
